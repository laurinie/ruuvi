[{"/Users/225927/own/projects/ruuvi/src/index.tsx":"1","/Users/225927/own/projects/ruuvi/src/reportWebVitals.ts":"2","/Users/225927/own/projects/ruuvi/src/App.tsx":"3","/Users/225927/own/projects/ruuvi/src/utils.ts":"4","/Users/225927/own/projects/ruuvi/src/context/data.ts":"5","/Users/225927/own/projects/ruuvi/src/api/data.ts":"6","/Users/225927/own/projects/ruuvi/src/components/Updated.tsx":"7","/Users/225927/own/projects/ruuvi/src/components/LatestByTag.tsx":"8","/Users/225927/own/projects/ruuvi/src/components/Humidity.tsx":"9","/Users/225927/own/projects/ruuvi/src/components/Temperature.tsx":"10","/Users/225927/own/projects/ruuvi/src/components/Battery.tsx":"11","/Users/225927/own/projects/ruuvi/src/components/Tags.tsx":"12","/Users/225927/own/projects/ruuvi/src/components/Navigation.tsx":"13","/Users/225927/own/projects/ruuvi/src/components/TagPage.tsx":"14"},{"size":762,"mtime":1620927590406,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1609766818536,"results":"17","hashOfConfig":"16"},{"size":2328,"mtime":1620997579976,"results":"18","hashOfConfig":"16"},{"size":1127,"mtime":1609766818537,"results":"19","hashOfConfig":"16"},{"size":151,"mtime":1609766818535,"results":"20","hashOfConfig":"16"},{"size":839,"mtime":1620932617690,"results":"21","hashOfConfig":"16"},{"size":396,"mtime":1609766818535,"results":"22","hashOfConfig":"16"},{"size":1119,"mtime":1609766818534,"results":"23","hashOfConfig":"16"},{"size":1673,"mtime":1609766818534,"results":"24","hashOfConfig":"16"},{"size":1688,"mtime":1609766818534,"results":"25","hashOfConfig":"16"},{"size":1577,"mtime":1609766818534,"results":"26","hashOfConfig":"16"},{"size":5723,"mtime":1620998334904,"results":"27","hashOfConfig":"16"},{"size":1398,"mtime":1620997801600,"results":"28","hashOfConfig":"16"},{"size":4215,"mtime":1621001174909,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1crf3qu",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/225927/own/projects/ruuvi/src/index.tsx",[],["63","64"],"/Users/225927/own/projects/ruuvi/src/reportWebVitals.ts",[],"/Users/225927/own/projects/ruuvi/src/App.tsx",["65","66","67","68","69","70","71","72","73","74","75","76","77"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { ContextData, DataPoint } from './types/dataTypes';\nimport { DataContext } from './context/data';\nimport { apiGetData } from './api/data';\nimport LatestByTag from './components/LatestByTag';\nimport Updated from './components/Updated';\nimport styled from 'styled-components'\nimport Temperature from './components/Temperature';\nimport { sortByTime } from './utils';\nimport Humidity from './components/Humidity';\nimport Battery from './components/Battery';\nimport Tags from './components/Tags';\nimport { Home } from '@material-ui/icons';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Navigation from './components/Navigation';\nimport TagPage from './components/TagPage';\n\n\nconst Footer = styled.footer`\n    position: fixed;\n    top: 0;\n    padding-left: 10px;\n    background-color: #484848;\n    width: 100%;\n`;\n\nfunction App() {\n\n  const [data, setData] = useState<ContextData | null>(null);\n  const [refreshInterval, setRefreshInterval] = useState(15000);\n\n  function getData() {\n\n    //   apiGetData(id)\n    //     .then(json => {\n    //       setData({\n    //         updated: new Date().toLocaleString('fi-FI'),\n    //         dataPoints: sortByTime(json.Items, 'desc')\n    //       })\n    //     })\n  }\n\n  useEffect(() => {\n    if (!data) {\n      getData()\n    }\n  }, [data])\n\n  useEffect(() => {\n    if (refreshInterval && refreshInterval > 0) {\n      const interval = setInterval(getData, refreshInterval);\n      return () => clearInterval(interval);\n    }\n  }, [refreshInterval]);\n\n\n  return (\n    <DataContext.Provider value={data}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/hallinta\">\n              <Tags enableSave />\n            </Route>\n            <Route path=\"/sijainti\">\n              <p>sijainti</p>\n            </Route>\n            <Route path=\"/tag/:id\" component={TagPage}>\n            </Route>\n            <Route path=\"/\">\n              <Tags />\n            </Route>\n          </Switch>\n          <Navigation />\n        </div>\n      </Router>\n\n      {/* <LatestByTag name=\"Sauna\" />\n        <Temperature name=\"Sauna\"/>\n        <Humidity name=\"Sauna\"/>\n        <Battery /> */}\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/225927/own/projects/ruuvi/src/utils.ts",[],["78","79"],"/Users/225927/own/projects/ruuvi/src/context/data.ts",[],"/Users/225927/own/projects/ruuvi/src/api/data.ts",[],"/Users/225927/own/projects/ruuvi/src/components/Updated.tsx",[],"/Users/225927/own/projects/ruuvi/src/components/LatestByTag.tsx",["80"],"/Users/225927/own/projects/ruuvi/src/components/Humidity.tsx",[],"/Users/225927/own/projects/ruuvi/src/components/Temperature.tsx",[],"/Users/225927/own/projects/ruuvi/src/components/Battery.tsx",[],"/Users/225927/own/projects/ruuvi/src/components/Tags.tsx",["81","82","83","84","85","86","87","88","89","90"],"import * as React from 'react';\nimport { Avatar, Button, Card, CardContent, Chip, CircularProgress, IconButton, List, ListItem, ListItemAvatar, ListItemText, TextField, Typography } from '@material-ui/core';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport TagIcon from '@material-ui/icons/LocalOffer';\nimport SaveIcon from '@material-ui/icons/Save';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { useEffect, useState } from 'react';\nimport { apiAddTag, apiGetData, apiGetTags } from '../api/data';\nimport { DataPoint, Tag } from '../types/dataTypes';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n        },\n        list:{\n            width:'100%'\n        },\n        link:{\n            textDecoration:'none',\n            width: '100%'\n        },\n        orange: {\n            color: theme.palette.getContrastText(deepOrange[500]),\n            backgroundColor: deepOrange[500],\n        },\n        purple: {\n            color: theme.palette.getContrastText(deepPurple[500]),\n            backgroundColor: deepPurple[500],\n        },\n    }),\n);\n\ninterface Props {\n    enableSave?: boolean\n}\n\nfunction Tags({ enableSave }: Props) {\n    const classes = useStyles();\n    const [tags, setTags] = useState<Tag[]>()\n    const [name, setName] = useState<string>(\"\")\n    const [id, setId] = useState<string>(\"\")\n    const [group, setGroup] = useState<string>(\"\")\n    const [isLoading, setIsLoading] = useState<boolean>(false)\n\n\n    function handelSave() {\n        setIsLoading(true)\n        apiAddTag({ id, name, group }).then(() => {\n            fetchTags()\n        }).finally(() => setIsLoading(false))\n    }\n    function fetchTags() {\n        setIsLoading(true)\n        apiGetTags().then((data) => {\n            let tagsAndData = data\n            Promise.all(tagsAndData.map(async (tag) => {\n                await fetchTagDataById(tag.id).then((latest) => {\n                    tag.data = [latest]\n                })\n            })).then(() => setTags(tagsAndData))\n        }).finally(() => setIsLoading(false))\n    }\n\n    async function fetchTagDataById(id: string): Promise<DataPoint> {\n\n        return apiGetData(id).then(data => {\n            return data.Items.pop()\n        })\n    }\n\n    useEffect(() => {\n        fetchTags()\n    }, [])\n\n\n    return (\n        <>\n            <IconButton aria-label=\"refresh\" onClick={fetchTags}>\n                {isLoading ?\n                    <CircularProgress /> :\n                    <RefreshIcon />\n                }\n            </IconButton>\n\n            <List className={classes.list}>\n                {tags?.map(({ name, id, group, data }) => (\n                    <ListItem key={id}>\n                        <Link to={`/tag/${id}`} className={classes.link}>\n                            <Card >\n                                <CardContent>\n                                    <Typography color=\"textSecondary\">\n                                        {`${id} - ${group}`}\n                                    </Typography>\n                                    <Typography variant='h5'>\n                                        {name}\n                                    </Typography>\n                                    <Chip\n                                        avatar={\n                                            <Avatar className={classes.orange}>°C</Avatar>\n                                        }\n                                        label={data && data[0]?.temperature.toPrecision(3) || '-'}\n                                        variant=\"outlined\"\n                                    />\n                                    <Chip\n                                        avatar={\n                                            <Avatar className={classes.purple}>%</Avatar>\n                                        }\n                                        label={data && data[0]?.humidity.toPrecision(3) || '-'}\n                                        variant=\"outlined\"\n                                    />\n                                    <Typography variant=\"body2\" component=\"p\">\n                                        {data && new Date(data[0]?.updated).toLocaleString() || '-'}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Link>\n                    </ListItem>\n                ))}\n            </List>\n\n            {enableSave &&\n                <div style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    maxWidth: 300,\n                    gap: 15\n                }}>\n                    <TextField id=\"name\" label=\"Nimi\" variant=\"outlined\" value={name} onChange={({ target }) => setName(target.value)} />\n                    <TextField id=\"id\" label=\"ID\" variant=\"outlined\" value={id} onChange={({ target }) => setId(target.value)} />\n                    <TextField id=\"group\" label=\"Ryhmä\" variant=\"outlined\" value={group} onChange={({ target }) => setGroup(target.value)} />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        startIcon={<SaveIcon />}\n                        onClick={handelSave}\n                    >\n                        Tallenna\n                </Button>\n                </div>\n            }\n        </>\n    )\n}\n\nexport default Tags;","/Users/225927/own/projects/ruuvi/src/components/Navigation.tsx",["91"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        position: 'fixed',\n        bottom: 0,\n        width: '100%'\n    },\n});\n\nexport const routes = [\n    \"\",\n    \"hallinta\"\n]\n\nexport default function Navigation() {\n    const classes = useStyles();\n    const history = useHistory();\n    const [value, setValue] = useState(routes.indexOf(history.location.pathname.replace(\"/\",\"\")));\n\n    return (\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n                history.push(`/${routes[newValue]}`)\n            }}\n            showLabels\n            className={classes.root}\n        >\n            <BottomNavigationAction label=\"Etusivu\" icon={<HomeIcon />} />\n            <BottomNavigationAction label=\"Hallinta\" icon={<SettingsIcon />} />\n            {/* <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} /> */}\n        </BottomNavigation>\n    );\n}\n\n","/Users/225927/own/projects/ruuvi/src/components/TagPage.tsx",["92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":23,"nodeType":"99","messageId":"100","endLine":3,"endColumn":32},{"ruleId":"97","severity":1,"message":"101","line":5,"column":10,"nodeType":"99","messageId":"100","endLine":5,"endColumn":20},{"ruleId":"97","severity":1,"message":"102","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":19},{"ruleId":"97","severity":1,"message":"103","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":15},{"ruleId":"97","severity":1,"message":"104","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":19},{"ruleId":"97","severity":1,"message":"105","line":10,"column":10,"nodeType":"99","messageId":"100","endLine":10,"endColumn":20},{"ruleId":"97","severity":1,"message":"106","line":11,"column":8,"nodeType":"99","messageId":"100","endLine":11,"endColumn":16},{"ruleId":"97","severity":1,"message":"107","line":12,"column":8,"nodeType":"99","messageId":"100","endLine":12,"endColumn":15},{"ruleId":"97","severity":1,"message":"108","line":14,"column":10,"nodeType":"99","messageId":"100","endLine":14,"endColumn":14},{"ruleId":"97","severity":1,"message":"109","line":19,"column":3,"nodeType":"99","messageId":"100","endLine":19,"endColumn":7},{"ruleId":"97","severity":1,"message":"110","line":25,"column":7,"nodeType":"99","messageId":"100","endLine":25,"endColumn":13},{"ruleId":"97","severity":1,"message":"111","line":35,"column":16,"nodeType":"99","messageId":"100","endLine":35,"endColumn":23},{"ruleId":"97","severity":1,"message":"112","line":36,"column":27,"nodeType":"99","messageId":"100","endLine":36,"endColumn":45},{"ruleId":"93","replacedBy":"113"},{"ruleId":"95","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":19,"column":8,"nodeType":"117","endLine":19,"endColumn":14,"suggestions":"118"},{"ruleId":"97","severity":1,"message":"119","line":2,"column":97,"nodeType":"99","messageId":"100","endLine":2,"endColumn":111},{"ruleId":"97","severity":1,"message":"120","line":2,"column":113,"nodeType":"99","messageId":"100","endLine":2,"endColumn":125},{"ruleId":"97","severity":1,"message":"121","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":15},{"ruleId":"115","severity":1,"message":"122","line":79,"column":8,"nodeType":"117","endLine":79,"endColumn":10,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":107,"column":53,"nodeType":"126","messageId":"127","endLine":107,"endColumn":55},{"ruleId":"124","severity":1,"message":"125","line":107,"column":92,"nodeType":"126","messageId":"127","endLine":107,"endColumn":94},{"ruleId":"124","severity":1,"message":"125","line":114,"column":53,"nodeType":"126","messageId":"127","endLine":114,"endColumn":55},{"ruleId":"124","severity":1,"message":"125","line":114,"column":89,"nodeType":"126","messageId":"127","endLine":114,"endColumn":91},{"ruleId":"124","severity":1,"message":"125","line":118,"column":47,"nodeType":"126","messageId":"127","endLine":118,"endColumn":49},{"ruleId":"124","severity":1,"message":"125","line":118,"column":94,"nodeType":"126","messageId":"127","endLine":118,"endColumn":96},{"ruleId":"97","severity":1,"message":"128","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":22},{"ruleId":"115","severity":1,"message":"129","line":77,"column":8,"nodeType":"117","endLine":77,"endColumn":10,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"@typescript-eslint/no-unused-vars","'DataPoint' is defined but never used.","Identifier","unusedVar","'apiGetData' is defined but never used.","'LatestByTag' is defined but never used.","'Updated' is defined but never used.","'Temperature' is defined but never used.","'sortByTime' is defined but never used.","'Humidity' is defined but never used.","'Battery' is defined but never used.","'Home' is defined but never used.","'Link' is defined but never used.","'Footer' is assigned a value but never used.","'setData' is assigned a value but never used.","'setRefreshInterval' is assigned a value but never used.",["131"],["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array. If 'setLocation' needs the current value of 'name', you can also switch to useReducer instead of useState and read 'name' in the reducer.","ArrayExpression",["133"],"'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'TagIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchTags'. Either include it or remove the dependency array.",["134"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'LocationOnIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchTags' and 'tagId'. Either include them or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [data, name]",{"range":"142","text":"143"},"Update the dependencies array to be: [fetchTags]",{"range":"144","text":"145"},"Update the dependencies array to be: [fetchTags, tagId]",{"range":"146","text":"147"},[519,525],"[data, name]",[2541,2543],"[fetchTags]",[2421,2423],"[fetchTags, tagId]"]