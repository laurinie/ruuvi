[{"/home/laurinie/projects/ruuvi/src/index.tsx":"1","/home/laurinie/projects/ruuvi/src/reportWebVitals.ts":"2","/home/laurinie/projects/ruuvi/src/App.tsx":"3","/home/laurinie/projects/ruuvi/src/context/data.ts":"4","/home/laurinie/projects/ruuvi/src/api/data.ts":"5","/home/laurinie/projects/ruuvi/src/components/Temperature.tsx":"6","/home/laurinie/projects/ruuvi/src/components/Humidity.tsx":"7","/home/laurinie/projects/ruuvi/src/components/LatestByTag.tsx":"8","/home/laurinie/projects/ruuvi/src/components/Updated.tsx":"9","/home/laurinie/projects/ruuvi/src/utils.ts":"10","/home/laurinie/projects/ruuvi/src/components/Battery.tsx":"11"},{"size":500,"mtime":1609009153990,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1609009153990,"results":"14","hashOfConfig":"13"},{"size":1642,"mtime":1609254191948,"results":"15","hashOfConfig":"13"},{"size":151,"mtime":1609072760390,"results":"16","hashOfConfig":"13"},{"size":339,"mtime":1610296985397,"results":"17","hashOfConfig":"13"},{"size":1688,"mtime":1609254171998,"results":"18","hashOfConfig":"13"},{"size":1673,"mtime":1609254124958,"results":"19","hashOfConfig":"13"},{"size":1119,"mtime":1609096770133,"results":"20","hashOfConfig":"13"},{"size":396,"mtime":1609073060350,"results":"21","hashOfConfig":"13"},{"size":1127,"mtime":1609106860909,"results":"22","hashOfConfig":"13"},{"size":1577,"mtime":1609107996529,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"xo2c7x",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/laurinie/projects/ruuvi/src/index.tsx",[],["49","50"],"/home/laurinie/projects/ruuvi/src/reportWebVitals.ts",[],"/home/laurinie/projects/ruuvi/src/App.tsx",["51","52"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { ContextData, DataPoint } from './types/dataTypes';\nimport { DataContext } from './context/data';\nimport { apiGetData } from './api/data';\nimport LatestByTag from './components/LatestByTag';\nimport Updated from './components/Updated';\nimport styled from 'styled-components'\nimport Temperature from './components/Temperature';\nimport { sortByTime } from './utils';\nimport Humidity from './components/Humidity';\nimport Battery from './components/Battery';\n\n\nconst Footer = styled.footer`\n    position: fixed;\n    top: 0;\n    padding-left: 10px;\n    background-color: #484848;\n    width: 100%;\n`;\n\nfunction App() {\n\n  const [data, setData] = useState<ContextData | null>(null);\n  const [refreshInterval, setRefreshInterval] = useState(15000);\n\n  function getData() {\n\n    apiGetData()\n      .then(json => {\n        setData({\n          updated: new Date().toLocaleString('fi-FI'),\n          dataPoints: sortByTime(json.Items, 'desc')\n        })\n      })\n  }\n\n  useEffect(() => {\n    if (!data) {\n      getData()\n    }\n  }, [data])\n\n  useEffect(() => {\n    if (refreshInterval && refreshInterval > 0) {\n      const interval = setInterval(getData, refreshInterval);\n      return () => clearInterval(interval);\n    }\n  }, [refreshInterval]);\n\n\n  return (\n    <DataContext.Provider value={data}>\n      <div className=\"App\">\n        <LatestByTag name=\"Sauna\" />\n        <Temperature name=\"Sauna\"/>\n        <Humidity name=\"Sauna\"/>\n        <Battery />\n      </div>\n      <Footer>\n        <Updated />\n      </Footer>\n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n","/home/laurinie/projects/ruuvi/src/context/data.ts",[],"/home/laurinie/projects/ruuvi/src/api/data.ts",[],"/home/laurinie/projects/ruuvi/src/components/Temperature.tsx",[],"/home/laurinie/projects/ruuvi/src/components/Humidity.tsx",[],"/home/laurinie/projects/ruuvi/src/components/LatestByTag.tsx",["53"],"import * as React from 'react'\nimport { useContext, useEffect, useState } from 'react';\nimport { DataContext } from '../context/data';\nimport { DataPoint } from '../types/dataTypes';\nimport { batteryLevel } from '../utils';\n\ninterface Props {\n    name: string\n}\n\nexport default function LatestByTag({ name }: Props) {\n\n    const data = useContext(DataContext)\n\n    const [location, setLocation] = useState<DataPoint[]>()\n\n    useEffect(() => {\n        setLocation(data?.dataPoints?.filter(d => d.name === name))\n    }, [data])\n\n    return (\n        <>\n            {location ?\n                <div>\n                    <h1>{location[0].name}</h1>\n                    <h2>\n                        {location[0].temperature}Â°C\n                    </h2>\n                    <h2>\n                        {location[0].humidity}%\n                    </h2>\n                    <code>Varaus {batteryLevel(location[0].voltage)}</code>\n                    <p>{new Date(location[0].updated).toLocaleString('fi-FI')}</p>\n                </div>\n                :\n                <h1>Ladataan...</h1>\n            }\n        </>\n    )\n}","/home/laurinie/projects/ruuvi/src/components/Updated.tsx",[],"/home/laurinie/projects/ruuvi/src/utils.ts",[],"/home/laurinie/projects/ruuvi/src/components/Battery.tsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":23,"nodeType":"60","messageId":"61","endLine":3,"endColumn":32},{"ruleId":"58","severity":1,"message":"62","line":26,"column":27,"nodeType":"60","messageId":"61","endLine":26,"endColumn":45},{"ruleId":"63","severity":1,"message":"64","line":19,"column":8,"nodeType":"65","endLine":19,"endColumn":14,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'DataPoint' is defined but never used.","Identifier","unusedVar","'setRefreshInterval' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array. If 'setLocation' needs the current value of 'name', you can also switch to useReducer instead of useState and read 'name' in the reducer.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [data, name]",{"range":"72","text":"73"},[519,525],"[data, name]"]